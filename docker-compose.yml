version: '3.7'

services:
  postgres:
    image: postgres:9.6
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./build/keycloak/init.sql:/docker-entrypoint-initdb.d/1-keycloak.sql
      - ./build/hasura/init.sql:/docker-entrypoint-initdb.d/2-hasura.sql
    restart: always

  hasura:
    image: hasura/graphql-engine:v2.0.7
    ports:
      - ${HASURA_PORT}:8080
    restart: always
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_SECRET}
      HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${HASURA_DATABASE}
      HASURA_GRAPHQL_ENABLE_CONSOLE: ${HASURA_ENABLE_CONSOLE}
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_AUTH_HOOK: http://${DOCKER_HOST_IP}:8000/${HASURA_WEBHOOK}

  keycloak:
    image: jboss/keycloak:6.0.1
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: ${KEYCLOAK_DATABASE}
      DB_USER: ${POSTGRES_USER}
      DB_SCHEMA: public
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      PROXY_ADDRESS_FORWARDING: "true"
      KEYCLOAK_FRONTEND_URL: http://localhost:8000/auth
      KEYCLOAK_USER: ${KEYCLOAK_USERNAME}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
      KEYCLOAK_IMPORT: /opt/jboss/keycloak/realm-export.json
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    volumes: 
      - ./build/keycloak/realm-export.json:/opt/jboss/keycloak/realm-export.json
    ports:
      - ${KEYCLOAK_PORT}:8080
      - 9990:9990
    restart: always
  
  redis:
    image: redis:6.2.5
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - 6379:6379
    restart: always

  # search:
  #   image: getmeili/meilisearch:v0.11.0
  #   environment:
  #     MEILI_MASTER_KEY: ${MEILI_KEY}
  #   ports:
  #     - ${MEILI_PORT}:${MEILI_PORT}
  #   restart: always
  #   volumes:
  #     - ./dashboard-search/data.ms:/data.ms
  
  nginx:
    image: nginx:1.21.1
    volumes:
      - ./build/nginx/:/etc/nginx/templates
      - ./data/pdfs:/pdfs
      - ./data/thumbnails:/thumbnails
    ports:
      - ${NGINX_PORT}:${NGINX_PORT}
    restart: always

volumes:
  postgres_data:
