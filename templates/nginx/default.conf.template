server {
  listen {{ .Env.NGINX_PORT}};

  # Hasura
  location ~ /(v1alpha1|v1|v1beta1|v2|apis|healthz)/? {
    proxy_pass http://hasura:8080;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  # Keycloak
  location ~ /auth/? {
    proxy_pass http://keycloak:8080;
    proxy_set_header Host $host:$server_port;
    # proxy_set_header X-Forwarded-Server $host;
    # proxy_set_header X-Real-IP $remote_addr;
    # proxy_set_header X-Forwarded-Host $server_name;
    # proxy_set_header X-Forwarded-Port $server_port;
    # proxy_set_header Cookie $http_cookie;
    # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # proxy_set_header X-Forwarded-Proto $scheme;
    # proxy_set_header Upgrade $http_upgrade;
    # proxy_set_header Connection 'upgrade';
  }

  location /api/search/ {
   rewrite /api/search/(.*) /$1 break;
   proxy_pass http://search:7700;
   proxy_http_version 1.1;
   proxy_set_header Upgrade $http_upgrade;
   proxy_set_header Connection "upgrade";
  }

  # Express
  location ~ /(session|login|webhooks|keycloak|logout)/? {
  {{ if eq (getenv "ENV") "prod" }}
    proxy_pass http://express:{{ .Env.EXPRESS_PORT }};
  {{ else }}
    proxy_pass http://{{ .Env.DOCKER_HOST_IP}}:{{ .Env.EXPRESS_PORT }};
  {{ end }}
  }

  location /pdfs {
    root /pdfs;
  }

  location /thumbnails {
    root /thumbnails;
  }

  location / {
  {{ if eq (getenv "ENV") "prod" }}
    root /www;
  {{ else }}
    proxy_pass http://{{ .Env.DOCKER_HOST_IP}}:{{ .Env.CLIENT_DEV_PORT }};
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
  {{ end }}
  }
}
